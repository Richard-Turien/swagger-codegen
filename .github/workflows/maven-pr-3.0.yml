name: Build Test PR 3.0

on:
  pull_request:
    branches: [ "3.0.0" ]

jobs:
  build_pr_30:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11, 17 ]

    steps:
      - uses: actions/checkout@v3
        name: git checkout 3.0.0
        with:
          ref: 3.0.0
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: maven
      - name: preliminary checks
        run: |
          docker login --username=${{ secrets.DOCKERHUB_SB_USERNAME }} --password=${{ secrets.DOCKERHUB_SB_PASSWORD }}
          set -e
          # fail if templates/generators contain carriage return '\r'
          /bin/bash ./bin/utils/detect_carriage_return.sh
          # fail if generators contain merge conflicts
          /bin/bash ./bin/utils/detect_merge_conflict.sh
          # fail if generators contain tab '\t'
          /bin/bash ./bin/utils/detect_tab_in_java_class.sh
      - uses: s4u/maven-settings-action@v2.8.0
        name: setup maven settings.xml
        with:
          servers: |
            [{
                "id": "sonatype-nexus-staging",
                "username": "${{ secrets.OSSRH_USERNAME }}",
                "password": "${{ secrets.OSSRH_TOKEN }}"
            },
            {
                "id": "sonatype-nexus-snapshots",
                "username": "${{ secrets.OSSRH_USERNAME }}",
                "password": "${{ secrets.OSSRH_TOKEN }}"
            }]
      - name: Build with Maven
        run: |
          # mvn clean install -Pdocker -Plinux -DJETTY_TEST_HTTP_PORT=8090 -DJETTY_TEST_STOP_PORT=8089
          mvn clean verify -U -DJETTY_TEST_HTTP_PORT=8070 -DJETTY_TEST_STOP_PORT=8069
      - name: Test samples
        if: ${{ matrix.java == 8 }}
        run: |
          mvn -q verify -U -Psamples -Dproject.build.sourceEncoding=UTF8 -Dfile.encoding=UTF8
