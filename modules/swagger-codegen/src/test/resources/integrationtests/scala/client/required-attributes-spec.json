{
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "Scala Client API Integration Test"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/people": {
      "get": {
        "tags": [
          "People"
        ],
        "operationId": "getPeople",
        "summary": "People listing",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Limit results to people of a certain age.",
            "name": "age",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "People"
        ],
        "operationId": "savePeople",
        "summary": "People batch save",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Batch input of people to save",
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Explicitly sets the batch size",
            "name": "size",
            "required": false,
            "in": "query",
            "minimum": "10",
            "maximum": "250",
            "default": "25"
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          }
        }
      }
    },
    "/people/{personId}": {
      "get": {
        "tags": [
          "People"
        ],
        "summary": "get people by id",
        "description": "Retrieves a single person record by personId",
        "operationId": "getPersonById",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The person requested",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "404": {
            "description": "No person with the provided id was found"
          },
          "400": {
            "description": "Invalid person id"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The person's ID.",
            "name": "personId",
            "required": true,
            "in": "path"
          }
        ]
      }
    }
  },
  "definitions": {
    "Person": {
      "type": "object",
      "required": ["id","firstName","lastName"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string",
          "example": "text"
        },
        "lastName": {
          "type": "string",
          "example": "text"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
