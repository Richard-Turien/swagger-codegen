package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import java.util.List;
import java.util.ArrayList;

import com.fasterxml.jackson.databind.ObjectMapper;
import javax.inject.Inject;
{{#isResponseFile}}
import java.io.FileInputStream;
{{/isResponseFile}}
{{#useBeanValidation}}
import javax.validation.constraints.*;
{{/useBeanValidation}}
{{>generatedAnnotation}}
{{#operations}}
public class {{classname}}ControllerImp {{#useInterfaces}}implements {{classname}}ControllerImpInterface{{/useInterfaces}} {

    private final ObjectMapper mapper;

    @Inject
    private {{classname}}ControllerImp() {
        mapper = new ObjectMapper();
    }

{{#operation}}
    {{#useInterfaces}}@Override{{/useInterfaces}}
    public {{>returnTypes}} {{operationId}}({{#allParams}}{{>pathParams}}{{>queryParams}}{{>bodyParams}}{{>formParams}}{{>headerParams}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {{#handleExceptions}}throws Exception{{/handleExceptions}} {
        //Do your magic!!!
        {{#examples}}
        String accept = request().getHeader("Accept");
        if (accept != null && accept.contains("{{{contentType}}}")) {
            return mapper.readValue("{{#lamdaRemoveLineBreak}}{{#lamdaEscapeDoubleQuote}}{{{example}}}{{/lamdaEscapeDoubleQuote}}{{/lamdaRemoveLineBreak}}", {{>exampleReturnTypes}}.class);
        }
        {{/examples}}
        {{#returnType}}{{#isResponseFile}}return new FileInputStream("replace this");{{/isResponseFile}}{{^isResponseFile}}return new {{>returnTypesNoVoidNoAbstract}}();{{/isResponseFile}}{{/returnType}}
    }

{{/operation}}
}
{{/operations}}