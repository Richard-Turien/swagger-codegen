package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import play.mvc.Http;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.io.FileInputStream;
{{#useBeanValidation}}
import javax.validation.constraints.*;
{{/useBeanValidation}}
{{>generatedAnnotation}}
{{#operations}}
public class {{classname}}ControllerImp {{#useInterfaces}}implements {{classname}}ControllerImpInterface{{/useInterfaces}} {
{{#operation}}
    {{#useInterfaces}}@Override{{/useInterfaces}}
    public {{^returnType}}void{{/returnType}}{{#returnType}}CompletionStage<{{#supportAsync}}{{/supportAsync}}{{>returnTypesNoVoid}}{{#supportAsync}}>{{/supportAsync}}{{/returnType}} {{operationId}}({{#allParams}}{{>pathParams}}{{>queryParams}}{{>bodyParams}}{{>formParams}}{{>headerParams}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {{#handleExceptions}}throws Exception{{/handleExceptions}} {
        //Do your magic!!!
        {{#returnType}}
        {{#supportAsync}}return CompletableFuture.supplyAsync(() -> { {{/supportAsync}}
            {{#isResponseFile}}
            return new FileInputStream("replace this");
            {{/isResponseFile}}
            {{^isResponseFile}}
            return new {{>returnTypesNoVoidNoAbstract}}({{#vendorExtensions.missingReturnInfoIfNeeded}}{{vendorExtensions.missingReturnInfoIfNeeded}}{{/vendorExtensions.missingReturnInfoIfNeeded}});
            {{/isResponseFile}}
        {{#supportAsync}}
        });
        {{/supportAsync}}
        {{/returnType}}
    }
{{/operation}}
}
{{/operations}}