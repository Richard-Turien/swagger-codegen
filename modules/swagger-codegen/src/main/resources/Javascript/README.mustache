# Javascript v4 API Client

> A Javascript client for the Crunchbase v4 API.

This code was auto-generated using a fork of the Swagger-Codegen project, available [here](https://github.com/crunchbase/swagger-codegen). It is based on the [v4 API spec](https://github.com/crunchbase/api-spec/tree/data_exchange). 

## Overview

Import the module:

```
// es6
import CrunchbaseApi from './path/to/api.js';

// es5
var CrunchbaseApi = require('./path/to/api.js');
```

Instantiate a new `CrunchbaseApi`. The constructor takes a base URL parameter, which is required.

```
const api = new CrunchbaseApi('https://uat.crunchbase.com');
```

Use `CrunchbaseApi` methods to hit any endpoint. The method names include the HTTP verb, full path, and any path parameters. For example:

```
api.getDataEntitiesCollectionIdEntityId('organizations', 'apple');
```

See Requests for a complete list of request methods.

The requests are asynchronous, of course. With few exceptions, `CrunchbaseApi` methods return Promises that resolve with `http.IncomingMessage` objects. To see what methods and properties are available for parsing the response, refer to [this documentation](https://nodejs.org/api/http.html#http_class_http_incomingmessage).

```
api
.getDataEntitiesCollectionIdEntityId('organizations', 'apple')
.then(function(response) {
    console.log(response.statusCode);
});
```

Some requests may require authorization headers. The API client will keep track of user session for you, and add these headers when available. Start by logging in:

```
api.postCbSessions({
    email: 'foo@bar.co',
    password: 'foobar'
});

// alternatively
api.login('foo@bar.co', 'foobar');
```

POST and DELETE /cb/sessions will update the `CrunchbaseApi.session` property accordingly. You can check the current session state at any time:

```
api.isLoggedIn(); // => true
api.isPro(); // => true
```

See Utilities for a complete list of utility methods.

Now, you can make authorized requests:

```
api.postDataEntities({
  entity: {
    temp_id: '1234',
    entity_def_id: 'organization',
    operation: 'create',
    facet_ids: {
      add: [ 'company' ]
    },
    properties: {
      name: 'Fidget Spinners, Inc.'
    }
  }
});
```

## Requests

{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}

{{nickname}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}})

{{summary}}
{{notes}}

#### Parameters
{{#allParams}}
{{=<% %>=}}{<% dataType %>} <%={{ }}=%> {{paramName}} {{description}}
{{/allParams}}

#### Returns 
Promise<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}}>

```
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Utilities
