{{>licenseInfo}}

import http from "k6/http";
import { group, check, sleep } from "k6";

const baseURL = "{{baseURL}}";
{{#extra}}
let {{{key}}} = "{{{value}}}";
{{/extra}}

export default function() {
    {{#requestGroups}}
    group("{{{groupName}}}", () => {
        {{#variables}}
        let {{{key}}} = "{{{value}}}";
        {{/variables}}
        {{#requests}}
        {{#-first}}let {{/-first}}url = baseURL + `{{{path}}}{{=<% %>=}}<%#query%><%#-first%>?<%/-first%><%& key%>=${<%& value%>}<%^-last%>&<%/-last%><%/query%><%={{ }}=%>`;
        {{#body}}
        {{#-first}}let {{/-first}}body = {{#body}}{{=<% %>=}}{<%#parameters%>"<%& key%>": `<%& value%>`<%^-last%>, <%/-last%><%/parameters%>}<%={{ }}=%>{{/body}};
        {{/body}}
        {{#params}}
        {{#-first}}let {{/-first}}params = {{#params}}{{=<% %>=}}{headers: {<%# headers%>"<%& key%>": `<%& value%>`<%^-last%>, <%/-last%><%/headers%>}<%# auth%>, auth: "<%& auth%>"<%/auth%>}<%={{ }}=%>{{/params}};
        {{/params}}
        {{#-first}}let {{/-first}}request = http.{{method}}(url{{#body}}, body{{/body}}{{#params}}, params{{/params}});
        {{#k6Checks}}
        {{=<% %>=}}
        check(request, {
            "<%& description%>": (r) => r.status === <%& status%>
        });
        <%={{ }}=%>
        {{/k6Checks}}
        sleep(1);
        {{^-last}}

        {{/-last}}
        {{/requests}}
    });
    {{/requestGroups}}
}
