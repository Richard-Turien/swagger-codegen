@file:Suppress("unused")
package {{packageName}}.infrastructure

import java.lang.RuntimeException

open class ApiException(val code: Int, message: String) : RuntimeException(message)

open class ClientException : ApiException {
    /**
     * Constructs an [ClientException] with the specified detail message.

     * @param   message   the detail message.
     */
    constructor(code: Int, message: kotlin.String) : super(code, message)

    companion object {
        private const val serialVersionUID: Long = 123L
    }
}

open class ServerException : ApiException {
    /**
     * Constructs an [ServerException] with the specified detail message.

     * @param   message   the detail message.
     */
    constructor(code: Int, message: kotlin.String) : super(code, message)

    companion object {
        private const val serialVersionUID: Long = 456L
    }
}

open class RetryException : ApiException {
    /**
     * Constructs an [RetryException] with the specified detail message.

     * @param   message   the detail message.
     */
    constructor(code: Int, message: kotlin.String) : super(code, message)

    companion object {
        private const val serialVersionUID: Long = 789L
    }
}
