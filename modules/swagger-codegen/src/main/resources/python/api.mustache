# coding: utf-8

from __future__ import absolute_import

from ..configuration import configuration
from ..api_client import ApiClient


{{#operations}}
class {{classname}}(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        config = configuration
        if api_client:
            self.api_client = api_client
        else:
            if not config.api_client:
                config.api_client = ApiClient()
            self.api_client = config.api_client
{{#operation}}

    def {{nickname}}(self{{#sortParamsByRequiredFlag}}{{#allParams}}, {{paramName}}{{#required}}{{/required}}{{^required}}=None{{/required}}{{/allParams}}{{/sortParamsByRequiredFlag}}, callback=None):
        """
        {{{summary}}}
        {{{notes}}}

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
{{#sortParamsByRequiredFlag}}
        >>> thread = api.{{nickname}}({{#allParams}}{{#required}}{{paramName}}, {{/required}}{{/allParams}}callback=callback_function)
{{/sortParamsByRequiredFlag}}
{{^sortParamsByRequiredFlag}}
        >>> thread = api.{{nickname}}({{#allParams}}{{#required}}{{paramName}}={{paramName}}_value, {{/required}}{{/allParams}}callback=callback_function)
{{/sortParamsByRequiredFlag}}

        :param callback function: The callback function
            for asynchronous request. (optional)
{{#allParams}}
        :param {{dataType}} {{paramName}}: {{{description}}}{{#required}} (required){{/required}}{{#optional}}(optional){{/optional}}
{{/allParams}}
        :return: {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}None{{/returnType}}
                 If the method is called asynchronously,
                 returns the request thread.
        """

        resource_path = '{{path}}'.replace('{format}', 'json')
        method = '{{httpMethod}}'

        path_params = {
{{#pathParams}}
            '{{baseName}}': {{paramName}},
{{/pathParams}}
        }

        query_params = {
{{#queryParams}}
            '{{baseName}}': {{paramName}},
{{/queryParams}}
        }

        header_params = {
{{#headerParams}}
            '{{baseName}}': {{paramName}},
{{/headerParams}}
        }

        form_params = {}
        files = {}
{{#formParams}}
        if '{{paramName}}' in params:
            {{#notFile}}form_params['{{baseName}}'] = params['{{paramName}}']{{/notFile}}{{#isFile}}files['{{baseName}}'] = params['{{paramName}}']{{/isFile}}
{{/formParams}}

        body_params = None{{#bodyParam}} or {{paramName}}{{/bodyParam}}

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([{{#produces}}'{{mediaType}}'{{#hasMore}}, {{/hasMore}}{{/produces}}])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([{{#consumes}}'{{mediaType}}'{{#hasMore}}, {{/hasMore}}{{/consumes}}])

        # Authentication setting
        auth_settings = [{{#authMethods}}'{{name}}'{{#hasMore}}, {{/hasMore}}{{/authMethods}}]

        response = self.api_client.call_api(resource_path, method,
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=files,
                                            response_type={{#returnType}}'{{returnType}}'{{/returnType}}{{^returnType}}None{{/returnType}},
                                            auth_settings=auth_settings,
                                            callback=callback)
        return response
{{/operation}}
{{/operations}}
