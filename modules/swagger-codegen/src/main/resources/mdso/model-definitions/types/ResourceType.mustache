{{#models}}
{{#model}}
"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "{{packageName}} {{classname}}"
package     = {{packageName}}
version     = "1.0"
description = "Defines a {{classname}}"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
  {{#imports}}{{.}} = {{packageName}}.resourceTypes.{{.}}{{/imports}}
}
resourceTypes {

  {{classname}} {
    title = {{classname}}
    description = {{classname}}
    derivedFrom = Root
    properties {
      {{#vars}}{{#-first}}
      {{/-first}}
        {{name}} {
          {{^isContainer}}
          {{#isPrimitiveType}}
          type = {{#isString}}string{{/isString}}{{#isInteger}}integer{{/isInteger}}{{#isLong}}integer{{/isLong}}{{#isFloat}}integer{{/isFloat}}{{#isDouble}}integer{{/isDouble}}{{#isByteArray}}string{{/isByteArray}}{{#isBinary}}string{{/isBinary}}{{#isBoolean}}boolean{{/isBoolean}}{{#isDate}}string{{/isDate}}{{#isDateTime}}string{{/isDateTime}}
          {{/isPrimitiveType}}
          {{/isContainer}}
          {{^isContainer}}
          type = string   # {{datatype}} ?id?
          {{/isContainer}}
          {{#isListContainer}}
          type = array
          {{/isListContainer}}
          {{#isMapContainer}}
          TODO = TODO 
          {{/isMapContainer}}
          description = "{{description}}"
          {{#isEnum}}
          enum = [{{#allowableValues}}{{#values}}"{{{this}}}"{{^-last}}, {{/-last}}{{/values}}{{/allowableValues}}]
          {{/isEnum}}
          {{#required}}
          optional = true
          {{/required}}
          {{^required}}
          optional = false
          {{/required}}
        }
      {{/vars}}
    }
  }
}

serviceTemplates {

  {{classname}} {
    title = {{classname}}
    description = {{classname}}
    implements = {{packageName}}.resourceTypes.{{classname}}

  }
}
{{/model}}
{{/models}}
