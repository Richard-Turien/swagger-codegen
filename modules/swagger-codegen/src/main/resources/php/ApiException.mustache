<?php
/**
 * ApiException
 * PHP version 5
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

{{>partial_header}}
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace {{invokerPackage}};

use \Exception;
use Psr\Http\Message\ResponseInterface;

/**
 * ApiException a generic exception that covers all exceptions that might occur during comminucation with an api.
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ApiException extends Exception
{
	/**
	 * @var ResponseInterface
	 */
	private $response;

	/**
	 * Constructor
	 *
	 * @param string $message Error message
	 * @param int $code HTTP status code
	 * @param ResponseInterface|null $response
	 * @param \Throwable|null $previous
	 */
    public function __construct(string $message, int $code, ResponseInterface $response = null, \Throwable $previous = null)
    {
        parent::__construct($message, $code, $previous);
	    $this->response = $response;
    }


	/**
	 * Returns the response, if available.
	 *
	 * @return null|ResponseInterface
	 */
	public function getResponse(): ?ResponseInterface
	{
		return $this->response;
	}
}
