<?php
/**
 * HeaderSelector
 * PHP versions 5
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

{{>partial_header}}
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace {{invokerPackage}};

/**
 * Header Selector Class Doc Comment
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HeaderSelector
{
    /**
     * @param string[] $accepts An array of 'Accept' headers
     * @param string[] $contentTypes An array of content types
     * @return string[]
     */
    public function selectHeaders($accepts, $contentTypes)
    {
        $headers = [];
        $accept = $this->selectAcceptHeader($accepts);
        if ($accept !== null) {
            $headers['Accept'] = $accept;
        }
        $headers['Content-Type'] = $this->selectContentTypeHeader($contentTypes);
        return $headers;
    }

    /**
     * @param string[] $accepts An array of headers
     * @return string[]
     */
    public function selectHeadersForMultipart($accepts)
    {
        $headers = $this->selectHeaders($accepts, []);
        unset($headers['Content-Type']);
        return $headers;
    }

    /**
     * Return the header 'Accept' based on an array of accept provided
     *
     * @param string[] $accepts An array of headers
     * @return string|null Accept (e.g. `application/json`)
     */
    private function selectAcceptHeader(array $accepts)
    {
        $countAccepts = count($accepts);
        if ($countAccepts === 0 || ($countAccepts === 1 && $accepts[0] === '')) {
            return null;
        }
        if (preg_grep("/application\/json/i", $accepts)) {
            return 'application/json';
        }
        return implode(',', $accepts);
    }

    /**
     * Return the content type based on an array of content-type provided
     *
     * @param string[] $contentTypes An array of content types
     * @return string Content-Type (e.g. `application/json`, `application/json,application/xml`)
     */
    private function selectContentTypeHeader($contentTypes)
    {
        $countTypes = count($contentTypes);
        if (
            $countTypes === 0
            || ($countTypes === 1 && $contentTypes[0] === '')
            || preg_grep("/application\/json/i", $contentTypes)
        ) {
            return 'application/json';
        }
        return implode(',', $contentType);
    }
}
