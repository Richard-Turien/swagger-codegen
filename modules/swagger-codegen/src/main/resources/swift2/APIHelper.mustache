//
// APIHelper.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import ObjectMapper

class APIHelper {
    static let dateFormatterTransform:DateFormatterTransform = {
        let formatter = NSDateFormatter()
        formatter.dateFormat = "yyyy-MM-dd"
        return DateFormatterTransform(dateFormatter: formatter)
    }()
    static let dateTimeFormatterTransform:DateFormatterTransform = {
        let formatter = NSDateFormatter()
        formatter.dateFormat = "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
        return DateFormatterTransform(dateFormatter: formatter)
    }()
    static func rejectNil(source: [String:AnyObject?]?) -> [String:AnyObject] {
        var destination = [String:AnyObject]()
        guard let source = source where !source.isEmpty else {
            return destination
        }
        for (key, nillableValue) in source {
            if let value = nillableValue {
                destination[key] = value
            }
        }
        
        return destination
    }
    static func prepareParameters(source: [String:Any?]?) -> [String:String]? {
        guard let source = source where !source.isEmpty else {
            return nil
        }
        var destination = [String:String]()
        for (key, nillableValue) in source {
            if let value = nillableValue {
                let stringValue: String
                if let value = value as? Bool {
                    stringValue = value ? "true" : "false"
                }
                else if let value = value as? NSDate {
                    stringValue = value.toString("yyyy-MM-dd")
                }
                else {
                    stringValue = String(value)
                }
                destination[key] = stringValue
            }
        }
        
        if destination.isEmpty {
            return nil
        }
        return destination
    }
}
