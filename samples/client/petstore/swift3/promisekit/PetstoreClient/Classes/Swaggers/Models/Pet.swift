//
// Pet.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class Pet: NSObject, NSCoding ,JSONEncodable {

    public enum Status: String { 
        case available = "available"
        case pending = "pending"
        case sold = "sold"
    }
    public var id: Int64?
    public var category: Category?
    public var name: String?
    public var photoUrls: [String]?
    public var tags: [Tag]?
    /** pet status in the store */
    public var status: Status?

    public override init() {}


    public required init?(coder aDecoder: NSCoder){
        self.id = aDecoder.decodeObject(forKey: "id") as? Int64
        self.category = aDecoder.decodeObject(forKey: "category") as? Category
        self.name = aDecoder.decodeObject(forKey: "name") as? String
        self.photoUrls = aDecoder.decodeObject(forKey: "photoUrls") as? [String]
        self.tags = aDecoder.decodeObject(forKey: "tags") as? [Tag]
        self.status = aDecoder.decodeObject(forKey: "status") as? Status
    }
    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["id"] = self.id?.encodeToJSON()
        nillableDictionary["category"] = self.category?.encodeToJSON()
        nillableDictionary["name"] = self.name
        nillableDictionary["photoUrls"] = self.photoUrls?.encodeToJSON()
        nillableDictionary["tags"] = self.tags?.encodeToJSON()
        nillableDictionary["status"] = self.status?.rawValue

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }

    public func encode(with aCoder: NSCoder) {
        aCoder.encode(id, forKey: "id")
        aCoder.encode(category, forKey: "category")
        aCoder.encode(name, forKey: "name")
        aCoder.encode(photoUrls, forKey: "photoUrls")
        aCoder.encode(tags, forKey: "tags")
        aCoder.encode(status, forKey: "status")
    }
}
