//
// ArrayTest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class ArrayTest: NSObject, NSCoding ,JSONEncodable {

    public var arrayOfString: [String]?
    public var arrayArrayOfInteger: [[Int64]]?
    public var arrayArrayOfModel: [[ReadOnlyFirst]]?

    public override init() {}


    public required init?(coder aDecoder: NSCoder){
        self.arrayOfString = aDecoder.decodeObject(forKey: "arrayOfString") as? [String]
        self.arrayArrayOfInteger = aDecoder.decodeObject(forKey: "arrayArrayOfInteger") as? [[Int64]]
        self.arrayArrayOfModel = aDecoder.decodeObject(forKey: "arrayArrayOfModel") as? [[ReadOnlyFirst]]
    }
    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["array_of_string"] = self.arrayOfString?.encodeToJSON()
        nillableDictionary["array_array_of_integer"] = self.arrayArrayOfInteger?.encodeToJSON()
        nillableDictionary["array_array_of_model"] = self.arrayArrayOfModel?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }

    public func encode(with aCoder: NSCoder) {
        aCoder.encode(arrayOfString, forKey: "arrayOfString")
        aCoder.encode(arrayArrayOfInteger, forKey: "arrayArrayOfInteger")
        aCoder.encode(arrayArrayOfModel, forKey: "arrayArrayOfModel")
    }
}
