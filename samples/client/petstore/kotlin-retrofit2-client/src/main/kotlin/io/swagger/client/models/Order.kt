/**
* Swagger Petstore
* This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
*
* OpenAPI spec version: 1.0.0
* Contact: apiteam@swagger.io
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import com.google.gson.TypeAdapter
import com.google.gson.annotations.JsonAdapter
import com.google.gson.stream.JsonReader
import com.google.gson.stream.JsonWriter

/**
 * 
 * @param id 
 * @param petId 
 * @param quantity 
 * @param shipDate 
 * @param status Order Status
 * @param complete 
*/
data class Order (
    val id: kotlin.Long? = null,
    val petId: kotlin.Long? = null,
    val quantity: kotlin.Int? = null,
    val shipDate: java.time.OffsetDateTime? = null,
    /* Order Status */
    val status: StatusEnum? = null,
    val complete: kotlin.Boolean? = null
) {
    /**
    * Order Status
    * Values: PLACED,APPROVED,DELIVERED
    */
    @JsonAdapter(StatusEnum.Adapter::class)
    enum class StatusEnum(val value: kotlin.String){
    
        PLACED("placed"),
    
        APPROVED("approved"),
    
        DELIVERED("delivered");
    

        companion object {
            fun fromValue(text: kotlin.String): StatusEnum? {
                return StatusEnum.values().firstOrNull {
                    it.value == text
                }
            }
        }

        inner class Adapter : TypeAdapter<StatusEnum>() {
            override fun write(jsonWriter: JsonWriter, enumeration: StatusEnum) {
                jsonWriter.value(enumeration.value)
            }

            override fun read(jsonReader: JsonReader): StatusEnum? {
                val value = jsonReader.nextString()
                return  StatusEnum.fromValue(value)
            }
        }
    }

}
