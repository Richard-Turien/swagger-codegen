# coding: utf-8
""""
NOTE: This file is auto generated by the swagger-codegen.
Do not edit manually.
"""

from pprint import pformat


class User(object):
    """
    :ivar id: 
    :type id: int
    :ivar username: 
    :type username: str
    :ivar first_name: 
    :type first_name: str
    :ivar last_name: 
    :type last_name: str
    :ivar email: 
    :type email: str
    :ivar password: 
    :type password: str
    :ivar phone: 
    :type phone: str
    :ivar user_status: User Status
    :type user_status: int
    
    """
    def __init__(self, id=None, username=None, first_name=None, last_name=None, email=None, password=None, phone=None, user_status=None):
        self.swagger_type_by_variable_name = {
            'id': 'int',
            'username': 'str',
            'first_name': 'str',
            'last_name': 'str',
            'email': 'str',
            'password': 'str',
            'phone': 'str',
            'user_status': 'int',
            
        }
        
        self.external_name_by_attribute_name = {
            'id': 'id',
            'username': 'username',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'email': 'email',
            'password': 'password',
            'phone': 'phone',
            'user_status': 'userStatus',
            
        }

        self.id = id
        self.username = username
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.password = password
        self.phone = phone
        self.user_status = user_status
    
    
    
    
    
    
    
    

    def to_dict(self):
        def to_dict_internal(attr):
            value = getattr(self, attr)
            if isinstance(value, list):
                return [x.to_dict() if hasattr(x, "to_dict") else x for x in value]
            elif hasattr(value, "to_dict"):
                return value.to_dict()
            else:
                return value

        return {attr: to_dict_internal(attr) for attr in self.swagger_type_by_variable_name.keys()}

    def __repr__(self):
        return pformat(self.to_dict())
