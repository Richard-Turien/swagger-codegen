/**
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import expect, { createSpy, spyOn, isSpy } from 'expect';

(function(root, factory) {

}(this, function(expect, SwaggerPetstore) {
  'use strict';

  let instance;

  beforeEach(function() {
    instance = new SwaggerPetstore.HasOnlyReadOnly();
  });

  let getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  let setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HasOnlyReadOnly', function() {
    it('should create an instance of HasOnlyReadOnly', function() {
      // uncomment below and update the code to test HasOnlyReadOnly
      //var instane = new SwaggerPetstore.HasOnlyReadOnly();
      //expect(instance).to.be.a(SwaggerPetstore.HasOnlyReadOnly);
    });

    it('should have the property bar (base name: "bar")', function() {
      // uncomment below and update the code to test the property bar
      //var instane = new SwaggerPetstore.HasOnlyReadOnly();
      //expect(instance).to.be();
    });

    it('should have the property foo (base name: "foo")', function() {
      // uncomment below and update the code to test the property foo
      //var instane = new SwaggerPetstore.HasOnlyReadOnly();
      //expect(instance).to.be();
    });

  });

}));
